# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1alpha1_match_resources import V1alpha1MatchResources

class TestV1alpha1MatchResources(unittest.TestCase):
    """V1alpha1MatchResources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha1MatchResources:
        """Test V1alpha1MatchResources
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha1MatchResources`
        """
        model = V1alpha1MatchResources()
        if include_optional:
            return V1alpha1MatchResources(
                exclude_resource_rules = [
                    kubernetes.client.models.v1alpha1/named_rule_with_operations.v1alpha1.NamedRuleWithOperations(
                        api_groups = [
                            ''
                            ], 
                        api_versions = [
                            ''
                            ], 
                        operations = [
                            ''
                            ], 
                        resource_names = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        scope = '', )
                    ],
                match_policy = '',
                namespace_selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                    match_expressions = [
                        kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                object_selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                    match_expressions = [
                        kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                resource_rules = [
                    kubernetes.client.models.v1alpha1/named_rule_with_operations.v1alpha1.NamedRuleWithOperations(
                        api_groups = [
                            ''
                            ], 
                        api_versions = [
                            ''
                            ], 
                        operations = [
                            ''
                            ], 
                        resource_names = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        scope = '', )
                    ]
            )
        else:
            return V1alpha1MatchResources(
        )
        """

    def testV1alpha1MatchResources(self):
        """Test V1alpha1MatchResources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
