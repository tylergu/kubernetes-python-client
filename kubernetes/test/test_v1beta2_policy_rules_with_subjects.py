# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1beta2_policy_rules_with_subjects import V1beta2PolicyRulesWithSubjects

class TestV1beta2PolicyRulesWithSubjects(unittest.TestCase):
    """V1beta2PolicyRulesWithSubjects unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta2PolicyRulesWithSubjects:
        """Test V1beta2PolicyRulesWithSubjects
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1beta2PolicyRulesWithSubjects`
        """
        model = V1beta2PolicyRulesWithSubjects()
        if include_optional:
            return V1beta2PolicyRulesWithSubjects(
                non_resource_rules = [
                    kubernetes.client.models.v1beta2/non_resource_policy_rule.v1beta2.NonResourcePolicyRule(
                        non_resource_urls = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ],
                resource_rules = [
                    kubernetes.client.models.v1beta2/resource_policy_rule.v1beta2.ResourcePolicyRule(
                        api_groups = [
                            ''
                            ], 
                        cluster_scope = True, 
                        namespaces = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ],
                subjects = [
                    kubernetes.client.models.v1beta2/subject.v1beta2.Subject(
                        group = kubernetes.client.models.v1beta2/group_subject.v1beta2.GroupSubject(
                            name = '', ), 
                        kind = '', 
                        service_account = kubernetes.client.models.v1beta2/service_account_subject.v1beta2.ServiceAccountSubject(
                            name = '', 
                            namespace = '', ), 
                        user = kubernetes.client.models.v1beta2/user_subject.v1beta2.UserSubject(
                            name = '', ), )
                    ]
            )
        else:
            return V1beta2PolicyRulesWithSubjects(
                subjects = [
                    kubernetes.client.models.v1beta2/subject.v1beta2.Subject(
                        group = kubernetes.client.models.v1beta2/group_subject.v1beta2.GroupSubject(
                            name = '', ), 
                        kind = '', 
                        service_account = kubernetes.client.models.v1beta2/service_account_subject.v1beta2.ServiceAccountSubject(
                            name = '', 
                            namespace = '', ), 
                        user = kubernetes.client.models.v1beta2/user_subject.v1beta2.UserSubject(
                            name = '', ), )
                    ],
        )
        """

    def testV1beta2PolicyRulesWithSubjects(self):
        """Test V1beta2PolicyRulesWithSubjects"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
