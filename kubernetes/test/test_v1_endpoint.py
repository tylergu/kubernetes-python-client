# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1_endpoint import V1Endpoint

class TestV1Endpoint(unittest.TestCase):
    """V1Endpoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1Endpoint:
        """Test V1Endpoint
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1Endpoint`
        """
        model = V1Endpoint()
        if include_optional:
            return V1Endpoint(
                addresses = [
                    ''
                    ],
                conditions = kubernetes.client.models.v1/endpoint_conditions.v1.EndpointConditions(
                    ready = True, 
                    serving = True, 
                    terminating = True, ),
                deprecated_topology = {
                    'key' : ''
                    },
                hints = kubernetes.client.models.v1/endpoint_hints.v1.EndpointHints(
                    for_zones = [
                        kubernetes.client.models.v1/for_zone.v1.ForZone(
                            name = '', )
                        ], ),
                hostname = '',
                node_name = '',
                target_ref = kubernetes.client.models.v1/object_reference.v1.ObjectReference(
                    api_version = '', 
                    field_path = '', 
                    kind = '', 
                    name = '', 
                    namespace = '', 
                    resource_version = '', 
                    uid = '', ),
                zone = ''
            )
        else:
            return V1Endpoint(
                addresses = [
                    ''
                    ],
        )
        """

    def testV1Endpoint(self):
        """Test V1Endpoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
