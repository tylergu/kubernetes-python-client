# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1alpha1_resource_claim_status import V1alpha1ResourceClaimStatus

class TestV1alpha1ResourceClaimStatus(unittest.TestCase):
    """V1alpha1ResourceClaimStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha1ResourceClaimStatus:
        """Test V1alpha1ResourceClaimStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha1ResourceClaimStatus`
        """
        model = V1alpha1ResourceClaimStatus()
        if include_optional:
            return V1alpha1ResourceClaimStatus(
                allocation = kubernetes.client.models.v1alpha1/allocation_result.v1alpha1.AllocationResult(
                    available_on_nodes = kubernetes.client.models.v1/node_selector.v1.NodeSelector(
                        node_selector_terms = [
                            kubernetes.client.models.v1/node_selector_term.v1.NodeSelectorTerm(
                                match_expressions = [
                                    kubernetes.client.models.v1/node_selector_requirement.v1.NodeSelectorRequirement(
                                        key = '', 
                                        operator = '', 
                                        values = [
                                            ''
                                            ], )
                                    ], 
                                match_fields = [
                                    kubernetes.client.models.v1/node_selector_requirement.v1.NodeSelectorRequirement(
                                        key = '', 
                                        operator = '', )
                                    ], )
                            ], ), 
                    resource_handle = '', 
                    shareable = True, ),
                deallocation_requested = True,
                driver_name = '',
                reserved_for = [
                    kubernetes.client.models.v1alpha1/resource_claim_consumer_reference.v1alpha1.ResourceClaimConsumerReference(
                        api_group = '', 
                        name = '', 
                        resource = '', 
                        uid = '', )
                    ]
            )
        else:
            return V1alpha1ResourceClaimStatus(
        )
        """

    def testV1alpha1ResourceClaimStatus(self):
        """Test V1alpha1ResourceClaimStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
