# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1_pod_security_context import V1PodSecurityContext

class TestV1PodSecurityContext(unittest.TestCase):
    """V1PodSecurityContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1PodSecurityContext:
        """Test V1PodSecurityContext
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1PodSecurityContext`
        """
        model = V1PodSecurityContext()
        if include_optional:
            return V1PodSecurityContext(
                fs_group = 56,
                fs_group_change_policy = '',
                run_as_group = 56,
                run_as_non_root = True,
                run_as_user = 56,
                se_linux_options = kubernetes.client.models.v1/se_linux_options.v1.SELinuxOptions(
                    level = '', 
                    role = '', 
                    type = '', 
                    user = '', ),
                seccomp_profile = kubernetes.client.models.v1/seccomp_profile.v1.SeccompProfile(
                    localhost_profile = '', 
                    type = '', ),
                supplemental_groups = [
                    56
                    ],
                sysctls = [
                    kubernetes.client.models.v1/sysctl.v1.Sysctl(
                        name = '', 
                        value = '', )
                    ],
                windows_options = kubernetes.client.models.v1/windows_security_context_options.v1.WindowsSecurityContextOptions(
                    gmsa_credential_spec = '', 
                    gmsa_credential_spec_name = '', 
                    host_process = True, 
                    run_as_user_name = '', )
            )
        else:
            return V1PodSecurityContext(
        )
        """

    def testV1PodSecurityContext(self):
        """Test V1PodSecurityContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
