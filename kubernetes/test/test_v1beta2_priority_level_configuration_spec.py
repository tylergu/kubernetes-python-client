# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1beta2_priority_level_configuration_spec import V1beta2PriorityLevelConfigurationSpec

class TestV1beta2PriorityLevelConfigurationSpec(unittest.TestCase):
    """V1beta2PriorityLevelConfigurationSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta2PriorityLevelConfigurationSpec:
        """Test V1beta2PriorityLevelConfigurationSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1beta2PriorityLevelConfigurationSpec`
        """
        model = V1beta2PriorityLevelConfigurationSpec()
        if include_optional:
            return V1beta2PriorityLevelConfigurationSpec(
                limited = kubernetes.client.models.v1beta2/limited_priority_level_configuration.v1beta2.LimitedPriorityLevelConfiguration(
                    assured_concurrency_shares = 56, 
                    borrowing_limit_percent = 56, 
                    lendable_percent = 56, 
                    limit_response = kubernetes.client.models.v1beta2/limit_response.v1beta2.LimitResponse(
                        queuing = kubernetes.client.models.v1beta2/queuing_configuration.v1beta2.QueuingConfiguration(
                            hand_size = 56, 
                            queue_length_limit = 56, 
                            queues = 56, ), 
                        type = '', ), ),
                type = ''
            )
        else:
            return V1beta2PriorityLevelConfigurationSpec(
                type = '',
        )
        """

    def testV1beta2PriorityLevelConfigurationSpec(self):
        """Test V1beta2PriorityLevelConfigurationSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
