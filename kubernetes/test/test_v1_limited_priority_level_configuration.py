# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1_limited_priority_level_configuration import V1LimitedPriorityLevelConfiguration

class TestV1LimitedPriorityLevelConfiguration(unittest.TestCase):
    """V1LimitedPriorityLevelConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1LimitedPriorityLevelConfiguration:
        """Test V1LimitedPriorityLevelConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1LimitedPriorityLevelConfiguration`
        """
        model = V1LimitedPriorityLevelConfiguration()
        if include_optional:
            return V1LimitedPriorityLevelConfiguration(
                borrowing_limit_percent = 56,
                lendable_percent = 56,
                limit_response = kubernetes.client.models.v1/limit_response.v1.LimitResponse(
                    queuing = kubernetes.client.models.v1/queuing_configuration.v1.QueuingConfiguration(
                        hand_size = 56, 
                        queue_length_limit = 56, 
                        queues = 56, ), 
                    type = '', ),
                nominal_concurrency_shares = 56
            )
        else:
            return V1LimitedPriorityLevelConfiguration(
        )
        """

    def testV1LimitedPriorityLevelConfiguration(self):
        """Test V1LimitedPriorityLevelConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
