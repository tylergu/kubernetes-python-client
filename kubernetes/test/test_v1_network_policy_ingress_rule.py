# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1_network_policy_ingress_rule import V1NetworkPolicyIngressRule

class TestV1NetworkPolicyIngressRule(unittest.TestCase):
    """V1NetworkPolicyIngressRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1NetworkPolicyIngressRule:
        """Test V1NetworkPolicyIngressRule
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1NetworkPolicyIngressRule`
        """
        model = V1NetworkPolicyIngressRule()
        if include_optional:
            return V1NetworkPolicyIngressRule(
                var_from = [
                    kubernetes.client.models.v1/network_policy_peer.v1.NetworkPolicyPeer(
                        ip_block = kubernetes.client.models.v1/ip_block.v1.IPBlock(
                            cidr = '', 
                            except = [
                                ''
                                ], ), 
                        namespace_selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                            match_expressions = [
                                kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_labels = {
                                'key' : ''
                                }, ), 
                        pod_selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(), )
                    ],
                ports = [
                    kubernetes.client.models.v1/network_policy_port.v1.NetworkPolicyPort(
                        end_port = 56, 
                        port = kubernetes.client.models.port.port(), 
                        protocol = '', )
                    ]
            )
        else:
            return V1NetworkPolicyIngressRule(
        )
        """

    def testV1NetworkPolicyIngressRule(self):
        """Test V1NetworkPolicyIngressRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
